openapi: 3.1.0
info:
  title: Climate Mind
  version: '1.0'
  summary: Climate Mind app API
  description: Endpoints for the Climate Mind App API
  contact:
    name: Kameron
    email: hello@climatemind.org
servers:
  - url: 'https://app-backend-test-001.azurewebsites.net'
    description: test site
paths:
  /conversations:
    get:
      summary: All Conversations - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                x-examples:
                  example-1:
                    - conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb
                      userA:
                        name: Bill
                        id: ba5df442-7261-4fc1-bff0-5dfd84035d56
                        sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357
                      userB:
                        name: Bob
                      state: 2
                      consent: true
                      conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'
                      alignmentScoresId: 842a4949-a3e4-4914-c9d2-cd843f48f357
                items:
                  type: object
                  properties:
                    conversationId:
                      type: string
                      format: uuid
                    userA:
                      type: object
                      properties:
                        name:
                          type: string
                        id:
                          type: string
                        sessionId:
                          type: string
                          format: uuid
                    userB:
                      type: object
                      properties:
                        name:
                          type: string
                    state:
                      type: integer
                      enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                      description: |-
                        UserB Invited - 0,
                        UserB Consented - 1,
                        Align Button Clicked - 2,
                        Topics Button Clicked - 3,
                        Talked Button Clicked - 4,
                        Rating Done - 5
                    userARating:
                      type: integer
                    consent:
                      type: boolean
                    conversationTimestamp:
                      type: string
                    alignmentScoresId:
                      type: string
                      format: uuid
              examples:
                Successful response:
                  value:
                    - conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb
                      userA:
                        name: Bill
                        id: ba5df442-7261-4fc1-bff0-5dfd84035d56
                        sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357
                      userB:
                        name: Bob
                      state: 2
                      consent: true
                      conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'
                      alignmentScoresId: 842a4949-a3e4-4914-c9d2-cd843f48f357
      operationId: get-conversations
      description: 'Registered users can see a list of their conversations. Returns a list of the user''s conversations with the relevant names, UUIDs, conversation state and creation date. A JWT token is required.'
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
    parameters: []
  /email:
    get:
      summary: All Conversations - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    - conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb
                      userA:
                        name: Bill
                        id: ba5df442-7261-4fc1-bff0-5dfd84035d56
                        sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357
                      userB:
                        name: Bob
                      state: 2
                      consent: true
                      conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'
                      alignmentScoresId: 842a4949-a3e4-4914-c9d2-cd843f48f357
                type: object
                properties:
                  currentEmail:
                    type: string
              examples:
                Successful response:
                  value:
                    - currentEmail: test@test.com
      operationId: get-email
      description: Logged in users can retreive the email used for their account. Returns the email associated with the user's account. A JWT token is required.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
        - schema:
            type: string
          in: header
          description: 'credentials in format "Bearer {jwt_token}"'
          name: Authorization
    parameters: []
  /quizId:
    get:
      summary: All Conversations - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    - conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb
                      userA:
                        name: Bill
                        id: ba5df442-7261-4fc1-bff0-5dfd84035d56
                        sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357
                      userB:
                        name: Bob
                      state: 2
                      consent: true
                      conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'
                      alignmentScoresId: 842a4949-a3e4-4914-c9d2-cd843f48f357
                type: object
                properties:
                  currentEmail:
                    type: string
              examples:
                Successful response:
                  value:
                    - currentEmail: test@test.com
      operationId: get-quizId
      description: Logged in users can retreive their quizId used for their account. Returns the quizId associated with the user's account. A JWT token is required.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
        - schema:
            type: string
          in: header
          description: 'credentials in format "Bearer {jwt_token}"'
          name: Authorization
    parameters: []
  '/conversation/{conversationId}':
    put:
      summary: Single Conversation - PUT
      tags: []
      responses:
        '200':
          description: Updated object
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    message: conversation state updated
                    conversationId: '{conversation_uuid}'
                properties:
                  userARating:
                    type: number
                    example: '1'
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                  state:
                    type: number
                    example: '1'
                    enum:
                      - 0
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                  conversationId:
                    type: string
                    minLength: 1
                    format: uuid
                    example: 9f531903-13fa-4da2-bae4-62e522b8a7e0
                  receiverName:
                    type: string
                    example: Peter Parker
        '400':
          description: |-
            Bad request, possible reasons:
            - missing session header
            - not valid conversation UUID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden. Auth user don't have access to this conversation.
        '404':
          description: 'Not Found, session or conversation not found by UUID provided'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: object
                    properties:
                      error1:
                        type: string
                      error2:
                        type: string
              examples:
                Unknown field provided:
                  value:
                    key:
                      - Unknown field.
                'state beyond enumeration ':
                  value:
                    state:
                      - 'Must be one of: 0, 1, 2, 3, 4, 5.'
      operationId: put-conversation
      description: Change the receiver name or status of the conversation in the conversations table for User A.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userARating:
                  type: number
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                state:
                  type: number
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                receiverName:
                  type: string
            examples:
              Update conversation state to 1 - UserBConsented.:
                value:
                  state: 1
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
    parameters:
      - schema:
          type: string
          format: uuid
        name: conversationId
        in: path
        required: true
    get:
      summary: Single Conversation - GET
      operationId: 'get-conversation-:conversationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb
                    userA:
                      name: Bill
                      id: ba5df442-7261-4fc1-bff0-5dfd84035d56
                      sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357
                    userB:
                      name: Bob
                    state: 2
                    consent: true
                    conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'
                properties:
                  conversationId:
                    type: string
                    minLength: 1
                    format: uuid
                  userA:
                    type: object
                    required:
                      - name
                      - id
                      - sessionId
                    properties:
                      name:
                        type: string
                        minLength: 1
                      id:
                        type: string
                        minLength: 1
                      sessionId:
                        type: string
                        minLength: 1
                        format: uuid
                  userB:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        minLength: 1
                      quizId:
                        type: string
                  state:
                    type: number
                    enum:
                      - 0
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                    description: |-
                      UserB Invited - 0,
                      UserB Consented - 1,
                      Align Button Clicked - 2,
                      Topics Button Clicked - 3,
                      Talked Button Clicked - 4,
                      Rating Done - 5
                  userARating:
                    type: number
                  consent:
                    type: boolean
                  conversationTimestamp:
                    type: string
                    minLength: 1
                  alignmentScoresId:
                    type: string
                    format: uuid
                required:
                  - conversationId
                  - userA
                  - userB
                  - state
                  - consent
                  - conversationTimestamp
              examples:
                Successful GET Conversation Response Body with consent=true:
                  value:
                    conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb
                    userA:
                      name: Bill
                      id: ba5df442-7261-4fc1-bff0-5dfd84035d56
                      sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357
                    userB:
                      name: Bob
                      quizId: 842a4949-a3e4-4914-c9d2-cd843f48f357
                    state: 2
                    consent: true
                    conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'
                    alignmentScoresId: 842a4949-a3e4-4914-c9d2-cd843f48f357
                Successful GET Conversation Response Body with consent=false:
                  value:
                    conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb
                    userA:
                      name: Bill
                      id: ba5df442-7261-4fc1-bff0-5dfd84035d56
                      sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357
                    userB:
                      name: Bob
                      quizId: null
                    state: 2
                    consent: false
                    conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'
                    alignmentScoresId: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                GET Conversation Not Found Response Body:
                  value:
                    error: CONVERSATION_UUID is not in the db.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session UUID
      description: |-
        Get the details of a single conversation. 
        If consent=false, alignmentScoresId is not exposed, but set to null instead.
    delete:
      summary: Single Conversation - DELETE
      operationId: 'delete-conversation-:conversationId'
      responses:
        '204':
          description: Hiden
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    message: Conversation has removed successfully.
                    conversationId: uuid
                properties:
                  message:
                    type: string
                  conversationId:
                    type: string
                    format: uuid
              examples:
                Success:
                  value:
                    message: Conversation has removed successfully.
                    conversationId: uuid
        '403':
          description: Conversation user id not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                x-examples:
                  example-1:
                    message: Conversation has removed successfully.
        '404':
          description: Not Found or already hidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                x-examples:
                  example-1:
                    message: Conversation has removed successfully.
      description: Hide conversation
      parameters:
        - schema:
            type: string
            format: uuid
          in: header
          name: X-Session-Id
          description: Session uuid
          required: true
  /alignment:
    post:
      summary: Alignment Scores - POST
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  alignmentScoresId:
                    type: string
                required:
                  - alignmentScoresId
              examples:
                Successful POST Alignment Scores Response Body:
                  value:
                    alignmentScoresId: d86fcf26-7834-4bce-bfb7-f88170da9ace
      operationId: post-alignment
      description: To create aligned scores between user A and user B after user B has completed their quiz.
      parameters:
        - schema:
            type: string
          in: header
          description: Session uuid
          name: X-Session-Id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  conversationId: string
              properties:
                conversationId:
                  type: string
                  minLength: 1
                quizId:
                  type: string
              required:
                - conversationId
                - quizId
            examples:
              POST Alignment Scores Body:
                value:
                  conversationId: 7f910a47-9aed-4a27-8f33-3ae95230a776
                  quizId: d86fcf26-7834-4bce-bfb7-f88170da9ace
          application/xml:
            schema:
              type: object
              properties: {}
        description: Conversation ID and quiz ID are required.
    parameters: []
  '/alignment/:alignmentScoresId':
    get:
      summary: Alignment Scores - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    overallSimilarityScore: 70
                    topMatchPercent: 90
                    topMatchValue: benevolence
                    valueAlignment:
                      - valueName: benevolence
                        score: 90
                        description: lots of text
                      - valueName: power
                        score: 80
                        description: lots of text
                      - valueName: achievement
                        score: 70
                        description: lots of text
                      - valueName: self-direction
                        score: 60
                        description: lots of text
                      - valueName: hedonism
                        score: 50
                        description: lots of text
                      - valueName: tradition
                        score: 40
                        description: lots of text
                      - valueName: conformity
                        score: 30
                        description: lots of text
                      - valueName: universalism
                        score: 30
                        description: lots of text
                      - valueName: stimulation
                        score: 20
                        description: lots of text
                      - valueName: security
                        score: 10
                        description: lots of text
                    userAName: Bill
                    userBName: Bob
                properties:
                  overallSimilarityScore:
                    type: number
                  topMatchPercent:
                    type: number
                  topMatchValue:
                    type: string
                    minLength: 1
                  valueAlignment:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          minLength: 1
                        id:
                          type: string
                        name:
                          type: string
                          minLength: 1
                        shortDescription:
                          type: string
                        score:
                          type: number
                      required:
                        - description
                        - name
                        - score
                  userAName:
                    type: string
                    minLength: 1
                  userBName:
                    type: string
                    minLength: 1
                required:
                  - overallSimilarityScore
                  - topMatchPercent
                  - topMatchValue
                  - valueAlignment
                  - userAName
                  - userBName
              examples:
                Successful GET Alignment Scores Response Body:
                  value:
                    overallSimilarityScore: 70
                    topMatchPercent: 90
                    topMatchValue: Benevolence
                    valueAlignment:
                      - description: lots of text
                        id: benevolence
                        name: benevolence
                        shortDescription: some text
                        score: 90
                      - description: lots of text
                        id: power
                        name: power
                        shortDescription: some text
                        score: 80
                      - description: lots of text
                        id: achievement
                        name: achievement
                        shortDescription: some text
                        score: 70
                      - description: lots of text
                        id: self_direction
                        name: self direction
                        shortDescription: some text
                        score: 60
                      - description: lots of text
                        id: hedonism
                        name: hedonism
                        shortDescription: some text
                        score: 50
                      - description: lots of text
                        id: tradition
                        name: tradition
                        shortDescription: some text
                        score: 40
                      - description: lots of text
                        id: conformity
                        name: conformity
                        shortDescription: some text
                        score: 30
                      - description: lots of text
                        id: universalism
                        name: universalism
                        shortDescription: some text
                        score: 30
                      - description: lots of text
                        id: stimulation
                        name: stimulation
                        shortDescription: some text
                        score: 20
                      - description: lots of text
                        id: security
                        name: security
                        shortDescription: some text
                        score: 10
                    userAName: Bill
                    userBName: Bob
      operationId: get-alignment
      description: For a user to get a comparison of personal values with another user.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    parameters: []
  '/alignment/:alignmentScoresId/shared-impacts':
    get:
      summary: Shared Impacts - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  climateEffects:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - effectId
                        - sharedScore
                        - effectShortDescription
                        - effectTitle
                        - imageUrl
                      properties:
                        effectId:
                          type: string
                          minLength: 1
                        sharedScore:
                          type: number
                        effectShortDescription:
                          type: string
                          minLength: 1
                        effectTitle:
                          type: string
                          minLength: 1
                        imageUrl:
                          type: string
                          minLength: 1
                        relatedPersonalValues:
                          type: array
                          items:
                            required: []
                            properties: {}
                  userAName:
                    type: string
                    minLength: 1
                  userBName:
                    type: string
                    minLength: 1
                required:
                  - climateEffects
                  - userAName
                  - userBName
                x-examples:
                  example-1:
                    climateEffects:
                      - effectId: RBvy0CVizhdMfXbtJIc2En
                        sharedScore: 27.9
                        effectShortDescription: 'The total value of goods produced and services provided each year are increasingly     being constrained. Global warming is decreasing GDP by increasing in the frequency of heat waves and shrinking the tourism industry, among other impacts.'
                        effectTitle: decrease in GDP
                        imageUrl: 'https://i.imgur.com/NNK9Na4.jpg'
                        relatedPersonalValues:
                          - achievement
                          - benevolence
                      - effectId: R8Fa34SNdEwdj93hXO0oMS
                        sharedScore: 25.429
                        effectShortDescription: 'The frequency of warm days and night are increasing every year, causing increased indoor air temperatures which negatively affects learning. People''s ability to use attention and memory to acquire and retain new information is impaired.'
                        effectTitle: decrease in learning (without air conditioner)
                        imageUrl: 'https://i.imgur.com/Zzh5mT8.jpg'
                        relatedPersonalValues:
                          - benevolence
                          - universalism
                          - achievement
                      - effectId: R8epBa4UvcieLTynfK3E84u
                        sharedScore: 23.44
                        effectShortDescription: 'The frequency (and severity) of heatwaves are increasing, causing declines in moose populations. Moose are suited to colder climates and have thick fur and when stressed by overheating they stop grazing and lose body fat that''s essential for them to survive come winter. The number of moose alive to pursue and kill for sport are declining.'
                        effectTitle: decrease in population of moose available to hunt
                        imageUrl: 'https://i.imgur.com/mBvpx7w.jpg'
                        relatedPersonalValues:
                          - benevolence
                          - power
                          - stimulation
                    userAName: Bill
                    userBName: Bob
              examples:
                Successful GET Shared Impacts Response Body:
                  value:
                    climateEffects:
                      - effectId: RBvy0CVizhdMfXbtJIc2En
                        sharedScore: 27.9
                        effectShortDescription: 'The total value of goods produced and services provided each year are increasingly     being constrained. Global warming is decreasing GDP by increasing in the frequency of heat waves and shrinking the tourism industry, among other impacts.'
                        effectTitle: decrease in GDP
                        imageUrl: 'https://i.imgur.com/NNK9Na4.jpg'
                        relatedPersonalValues:
                          - achievement
                          - benevolence
                      - effectId: R8Fa34SNdEwdj93hXO0oMS
                        sharedScore: 25.429
                        effectShortDescription: 'The frequency of warm days and night are increasing every year, causing increased indoor air temperatures which negatively affects learning. People''s ability to use attention and memory to acquire and retain new information is impaired.'
                        effectTitle: decrease in learning (without air conditioner)
                        imageUrl: 'https://i.imgur.com/Zzh5mT8.jpg'
                        relatedPersonalValues:
                          - benevolence
                          - universalism
                          - achievement
                      - effectId: R8epBa4UvcieLTynfK3E84u
                        sharedScore: 23.44
                        effectShortDescription: 'The frequency (and severity) of heatwaves are increasing, causing declines in moose populations. Moose are suited to colder climates and have thick fur and when stressed by overheating they stop grazing and lose body fat that''s essential for them to survive come winter. The number of moose alive to pursue and kill for sport are declining.'
                        effectTitle: decrease in population of moose available to hunt
                        imageUrl: 'https://i.imgur.com/mBvpx7w.jpg'
                        relatedPersonalValues:
                          - benevolence
                          - power
                          - stimulation
                    userAName: Bill
                    userBName: Bob
      operationId: get-shared-impacts
      description: Show the full list of shared impacts from the shared feed calculated by comparing user a and user b's quiz scores.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
          required: true
    parameters: []
    post:
      summary: Choose Shared Impacts - POST
      operationId: shared-impacts
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: Shared impacts posted successfully
              examples:
                Successful Choose Shared Impact POST Response Body:
                  value:
                    message: Shared impact saved to the db.
      description: Confirm user b's selection of shared impacts that they wish to discuss with user a.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                sharedImpacts:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - effectId
                    properties:
                      effectId:
                        type: string
                        minLength: 1
              required:
                - sharedImpacts
              x-examples:
                example-1:
                  sharedImpacts:
                    - effectId: something
                    - effectId: something
            examples:
              Choose Shared Impact POST Request Body:
                value:
                  sharedImpacts:
                    - effectId: R8Fa34SNdEwdj93hXO0oMS
  '/alignment/:alignmentScoresId/shared-solutions':
    get:
      summary: Shared Solutions - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  climateSolutions:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - solutionId
                        - sharedScore
                        - solutionShortDescription
                        - solutionTitle
                        - imageUrl
                      properties:
                        solutionId:
                          type: string
                          minLength: 1
                        sharedScore:
                          type: number
                        solutionShortDescription:
                          type: string
                          minLength: 1
                        solutionTitle:
                          type: string
                          minLength: 1
                        imageUrl:
                          type: string
                          minLength: 1
                  userAName:
                    type: string
                    minLength: 1
                  userBName:
                    type: string
                    minLength: 1
                required:
                  - climateSolutions
                  - userAName
                  - userBName
                x-examples:
                  example-1:
                    climateSolutions:
                      - solutionId: RDSZw453Ge76hYTvYEsaAwU
                        sharedScore: 29.1
                        solutionShortDescription: Testers are awesome.
                        solutionTitle: becoming a tester
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 21.9999
                        solutionShortDescription: Communication framing is awesome.
                        solutionTitle: effective communication framing
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 21.33
                        solutionShortDescription: Electric cars are awesome.
                        solutionTitle: using electric cars
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 19.777
                        solutionShortDescription: Generic solutions are awesome.
                        solutionTitle: solution 4
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 14.342
                        solutionShortDescription: Solution 5 is awesome.
                        solutionTitle: solution 5
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 13.1
                        solutionShortDescription: Solution 6 is awesome.
                        solutionTitle: solution 6
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 9.888
                        solutionShortDescription: Solution 7 is the best.
                        solutionTitle: solution 7
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                    userAName: Bill
                    userBName: Bob
              examples:
                Successful Shared Solutions GET Response Body:
                  value:
                    climateSolutions:
                      - solutionId: RDSZw453Ge76hYTvYEsaAwU
                        sharedScore: 29.1
                        solutionShortDescription: Testers are awesome.
                        solutionTitle: becoming a tester
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 21.9999
                        solutionShortDescription: Communication framing is awesome.
                        solutionTitle: effective communication framing
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 21.33
                        solutionShortDescription: Electric cars are awesome.
                        solutionTitle: using electric cars
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 19.777
                        solutionShortDescription: Generic solutions are awesome.
                        solutionTitle: solution 4
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 14.342
                        solutionShortDescription: Solution 5 is awesome.
                        solutionTitle: solution 5
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 13.1
                        solutionShortDescription: Solution 6 is awesome.
                        solutionTitle: solution 6
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      - solutionId: string
                        sharedScore: 9.888
                        solutionShortDescription: Solution 7 is the best.
                        solutionTitle: solution 7
                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                    userAName: Bill
                    userBName: Bob
      operationId: get-shared-solutions
      description: Show the full list of shared solutions from the shared feed calculated by comparing user a and user b's quiz scores.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
          required: true
    parameters: []
    post:
      summary: Choose Shared Solutions - POST
      operationId: 'post-alignment-:alignmentId-shared-solutions'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: Shared solutions posted successfully.
              examples:
                Successful Choose Shared Solutions POST Response Body:
                  value:
                    message: Shared solutions saved to the db.
      description: Confirm user b's selection of shared solutions that they wish to discuss with user a.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                sharedSolutions:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - solutionId
                    properties:
                      solutionId:
                        type: string
                        minLength: 1
              required:
                - sharedSolutions
              x-examples:
                example-1:
                  sharedSolutions:
                    - solutionId: something
                    - solutionId: something
            examples:
              Choose Shared Solutions POST Request Body:
                value:
                  sharedSolutions:
                    - solutionId: R8WxponQcYpGf2zDnbsuVxG
                    - solutionId: RCg7BxIR9BolygeacF635tH
  '/user-b/:conversationId':
    post:
      summary: User B Event - POST
      operationId: post-user-b
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: User B clicked the link.
              examples:
                Successful POST User B Event Response Body:
                  value:
                    message: User B event logged.
      description: 'Log an event for user B (analytics tracking). The type of user event and its value is specified in the request body. If none is given, it is assumed that the event is clicking of the unique link.'
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                eventType:
                  type: string
                  minLength: 1
                eventValue:
                  type: string
                  minLength: 1
              required:
                - eventType
                - eventValue
              x-examples:
                example-1:
                  eventType: learn more - solution
                  eventValue: RBeBCvukdLNSe5AtnlJpQ1k
            examples:
              POST Shared Solution Learn More:
                value:
                  eventType: learn more - solution
                  eventValue: RBeBCvukdLNSe5AtnlJpQ1k
              POST Shared Impact Learn More:
                value:
                  eventType: learn more - impact
                  eventValue: R9JAWzfiZ9haeNhHiCpTWkr
        description: Specify the type of user event as per the examples.
    parameters: []
  '/conversation/:conversationId/consent':
    post:
      summary: User B Update Consent - POST
      operationId: 'post-conversation-:conversationId-consent'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
                x-examples:
                  example-1:
                    message: Consent successfully updated.
              examples:
                Successful POST Consent Response Body:
                  value:
                    message: Consent successfully updated.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                consent:
                  type: boolean
              required:
                - consent
              x-examples:
                example-1:
                  consent: true
            examples:
              POST Consent Body:
                value:
                  consent: true
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
      description: Creates or updates user B's consent choice for sharing information with user A. Posts an event for analytics logging.
  '/alignment/shared-solution/:solutionIri':
    get:
      summary: Shared Solution Details - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  solutionTitle:
                    type: string
                    minLength: 1
                  imageUrl:
                    type: string
                    minLength: 1
                  longDescription:
                    type: string
                    minLength: 1
                  solutionSources:
                    type: array
                    items:
                      required: []
                      properties: {}
                  solutionType:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - solutionTitle
                  - imageUrl
                  - longDescription
                  - solutionSources
                  - solutionType
                x-examples:
                  example-1:
                    solutionTitle: making aviation more efficient
                    imageUrl: 'https://i.imgur.com/JJV5iw2.jpg'
                    longDescription: 'Various technologies and operational practices can lower airplane emissions to some degree. They     include better engines, wingtips, and light weighting to improve fuel efficiency. Project Drawdown''s analysis focuses on adoption of the latest and most fuel-efficient aircraft; retrofitting existing aircraft with winglets, newer engines, and lighter interiors; and retiring older aircraft early. Over thirty years, and for a net cost of $830-850 billion, 6.3-9.2 gigatons of carbon dioxide emissions can be avoided, saving $2.5-3.6 trillion on lifetime jet-fuel and operating costs. Other efficiency measures could provide additional emissions reductions and savings as over 80 percent of aircraft are converted.'
                    solutionSources:
                      - 'https://drawdown.org/solutions/efficient-aviation'
                    solutionType:
                      - mitigation
              examples:
                Successful GET Shared Solution Details Response Body:
                  value:
                    solutionTitle: making aviation more efficient
                    imageUrl: 'https://i.imgur.com/JJV5iw2.jpg'
                    longDescription: 'Various technologies and operational practices can lower airplane emissions to some degree. They     include better engines, wingtips, and light weighting to improve fuel efficiency. Project Drawdown''s analysis focuses on adoption of the latest and most fuel-efficient aircraft; retrofitting existing aircraft with winglets, newer engines, and lighter interiors; and retiring older aircraft early. Over thirty years, and for a net cost of $830-850 billion, 6.3-9.2 gigatons of carbon dioxide emissions can be avoided, saving $2.5-3.6 trillion on lifetime jet-fuel and operating costs. Other efficiency measures could provide additional emissions reductions and savings as over 80 percent of aircraft are converted.'
                    solutionSources:
                      - 'https://drawdown.org/solutions/efficient-aviation'
                    solutionType:
                      - mitigation
      operationId: 'get-alignment-shared-solution-:solutionIri'
      description: Get the details for a shared solution when user b clicks 'Learn More'.
  '/alignment/shared-impact/:impactIri':
    get:
      summary: Shared Impact Details - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  effectTitle:
                    type: string
                  imageUrl:
                    type: string
                  longDescription:
                    type: string
                    minLength: 1
                  effectSources:
                    type: array
                    items:
                      required: []
                      properties: {}
                  relatedPersonalValues:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - effectTitle
                  - imageUrl
                  - longDescription
                  - effectSources
                  - relatedPersonalValues
                x-examples:
                  example-1:
                    effectTitle: ''
                    imageUrl: ''
                    longDescription: |-
                      Tourism supports the livelihoods of an estimated one in ten people worldwide andaround 80% occurs around coastal destinations. Coral reefs are popular and exciting places for sightseeing, swimming, snorkelling, diving and boating. For example, Australia's Great Barrier Reef annually attracts 1.9 million visits, generates AUD$5.4 billion from tourism and supports 54,000 jobs. Florida's Coral Reef has an annual estimated tourism value of $1.1 billion and supports 71,000 jobs.

                      Warming oceans due to climate change are causing increases in heatwaves occurring in the ocean (marine heatwaves). The frequency of these marine heatwaves has doubled since 1982, increasing coral bleaching and destruction. Already over 50% of coral reefs have been lost. If yearly CO2 emissions aren't reduced, in the future these heatwaves will occur 50 times more often than they do today, causing over 97% of all coral reefs to die off along with much of the coastal marine life they support. The loss of coral reefs makes coastal destinations less attractive to tourists and negatively affects local economies.
                    effectSources:
                      - 'https://www.bloomberg.com/graphics/2019-coral-reefs-at-risk'
                    relatedPersonalValues:
                      - achievement
                      - benevolence
              examples:
                Successful GET Shared Impact Details Response Body:
                  value:
                    effectTitle: ''
                    imageUrl: ''
                    longDescription: |-
                      Tourism supports the livelihoods of an estimated one in ten people worldwide andaround 80% occurs around coastal destinations. Coral reefs are popular and exciting places for sightseeing, swimming, snorkelling, diving and boating. For example, Australia's Great Barrier Reef annually attracts 1.9 million visits, generates AUD$5.4 billion from tourism and supports 54,000 jobs. Florida's Coral Reef has an annual estimated tourism value of $1.1 billion and supports 71,000 jobs.

                      Warming oceans due to climate change are causing increases in heatwaves occurring in the ocean (marine heatwaves). The frequency of these marine heatwaves has doubled since 1982, increasing coral bleaching and destruction. Already over 50% of coral reefs have been lost. If yearly CO2 emissions aren't reduced, in the future these heatwaves will occur 50 times more often than they do today, causing over 97% of all coral reefs to die off along with much of the coastal marine life they support. The loss of coral reefs makes coastal destinations less attractive to tourists and negatively affects local economies.
                    effectSources:
                      - 'https://www.bloomberg.com/graphics/2019-coral-reefs-at-risk'
                    relatedPersonalValues:
                      - achievement
                      - benevolence
      operationId: 'get-alignment-shared-solution-:solutionIri'
      description: Get the details for a shared impact when user b clicks 'Learn More'.
    parameters: []
  /user-account:
    parameters: []
    put:
      summary: Update User Account - PUT
      operationId: put-update-user
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                success:
                  value:
                    message: User password successfully updated.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: Invalid password
        '404':
          description: Session or User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  anyFieldName1:
                    type: array
                    items:
                      type: string
                  anyFieldName:
                    type: array
                    items:
                      type: string
              examples:
                validation errors for given fields:
                  value:
                    anyFieldName1:
                      - error
                    anyFieldName:
                      - error
        '':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: string
          headers: {}
      description: Update basic user account data (only password at the moment). Requires current password.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'credentials in format "Bearer {jwt_token}"'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  minLength: 8
                  maxLength: 128
                  format: password
                  writeOnly: true
                newPassword:
                  type: string
                  minLength: 8
                  maxLength: 128
                  format: password
                  writeOnly: true
                confirmPassword:
                  type: string
                  minLength: 8
                  maxLength: 128
                  format: password
                  writeOnly: true
              required:
                - currentPassword
                - newPassword
                - confirmPassword
            examples:
              update password:
                value:
                  currentPassword: p4ssw0rd1
                  newPassword: p4ssw0rd2
                  confirmPassword: p4ssw0rd2
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
  '/alignment/:alignmentScoresId/summary':
    get:
      summary: Alignment Summary - GET
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  userAName:
                    type: string
                    minLength: 1
                  topMatchValue:
                    type: string
                    minLength: 1
                  topMatchPercent:
                    type: string
                    minLength: 1
                  sharedImpacts:
                    type: array
                    items:
                      required: []
                      properties: {}
                  sharedSolutions:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - userAName
                  - topMatchValue
                  - topMatchPercent
                  - sharedImpacts
                  - sharedSolutions
                x-examples:
                  example-1:
                    userAName: Stevie
                    topMatchValue: benevolence
                    topMatchPercent: '90'
                    sharedImpacts:
                      - decrease in GDP
                    sharedSolutions:
                      - using electric cars
                      - becoming a tester
              examples:
                Successful GET Alignment Summary Response Body:
                  value:
                    userAName: Stevie
                    topMatchValue: Self Direction
                    topMatchPercent: '90'
                    sharedImpacts:
                      - decrease in GDP
                    sharedSolutions:
                      - using electric cars
                      - becoming a tester
      operationId: 'get-alignment-:alignmentScoresId-summary'
      description: For the user to see a summary of their alignment information and chosen climate impact and solution topics to share with the user that invited them to have a conversation.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
        - schema:
            type: string
          in: query
  '/conversation/{conversationId}/topics/':
    get:
      summary: Selected topics - GET
      tags: []
      responses: {}
      operationId: 'get-conversation-:conversationId-topics'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                climateEffects:
                  type: array
                  items:
                    type: object
                    properties:
                      effectId:
                        type: string
                      sharedScore:
                        type: number
                      effectShortDescription:
                        type: string
                      effectTitle:
                        type: string
                      imageUrl:
                        type: string
                      relatedPersonalValues:
                        type: array
                        items:
                          type: object
                      isPossiblyLocal:
                        type: boolean
                climateSolutions:
                  type: array
                  items:
                    type: object
                    properties:
                      solutionId:
                        type: string
                      sharedScore:
                        type: number
                      solutionShortDescription:
                        type: string
                      solutionTitle:
                        type: string
                      imageUrl:
                        type: string
                      solutionType:
                        type: string
                        enum:
                          - mitigation
                          - adaptation
            examples:
              Successful Selected Topics GET Response Body:
                value:
                  climateEffects:
                    - effectId: RBvy0CVizhdMfXbtJIc2En
                      sharedScore: 27.9
                      effectShortDescription: 'The total value of goods produced and services provided each year are increasingly     being constrained. Global warming is decreasing GDP by increasing in the frequency of heat waves and shrinking the tourism industry, among other impacts.'
                      effectTitle: decrease in GDP
                      imageUrl: 'https://i.imgur.com/NNK9Na4.jpg'
                      relatedPersonalValues:
                        - achievement
                        - benevolence
                      isPossiblyLocal: true
                  climateSolutions:
                    - solutionId: RDSZw453Ge76hYTvYEsaAwU
                      sharedScore: 29.1
                      solutionShortDescription: Testers are awesome.
                      solutionTitle: becoming a tester
                      imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      solutionType: adaptation
                    - solutionId: ADSZw453Ge76hYTvYEsaAwU
                      sharedScore: 21.9999
                      solutionShortDescription: Communication framing is awesome.
                      solutionTitle: effective communication framing
                      imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'
                      solutionType: mitigation
      description: |-
        Get the list of effects and solutions selected by user b from the set of alignment effects and solutions respectively.
        Under the current model, there will always be 1 selected effect and 2 selected solutions.
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
    parameters:
      - schema:
          type: string
        name: conversationId
        in: path
        required: true
  '/password-reset/{password_reset_link_uuid}':
    put:
      summary: Use reset password link
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                OK:
                  value:
                    message: OK
        '400':
          description: Invalid password reset link or session uuid format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                invalid session format:
                  value:
                    message: Session uuid is invalid
        '404':
          description: Session or password reset link is not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Not found:
                  value:
                    message: Not in DB
        '410':
          description: Reset password link is expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Expired:
                  value:
                    message: Reset link is expired.
        '422':
          description: Input validation errors
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    error:
                      field:
                        - sdf
                properties:
                  error:
                    type: object
                    properties:
                      field:
                        type: array
                        items:
                          type: string
              examples:
                example-1:
                  value:
                    error:
                      confirmPassword:
                        - Missing data for required field.
                      newPassword:
                        - Missing data for required field.
                      nkewPassword:
                        - Unknown field.
      operationId: put-password-reset
      description: Reset password by the reset password link
      parameters:
        - schema:
            type: string
          in: header
          description: Session uuid
          name: X-Session-Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  newPassword: str
                  confirmPassword: str
              properties:
                newPassword:
                  type: string
                confirmPassword:
                  type: string
              required:
                - newPassword
                - confirmPassword
            examples:
              example-1:
                value:
                  newPassword: string
                  confirmPassword: string
        description: 'New password should be provided with confirmation. '
    parameters:
      - schema:
          type: string
        name: password_reset_link_uuid
        in: path
        description: Identificator
        required: true
    get:
      summary: Check reset password link
      operationId: get-password-reset-password_reset_link_uuid
      parameters:
        - schema:
            type: string
          in: header
          name: X-Session-Id
          description: Session uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                OK:
                  value:
                    message: OK
        '400':
          description: Invalid session UUID format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                invalid session format:
                  value:
                    message: Session uuid is invalid
        '404':
          description: 'Session not found '
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Not found:
                  value:
                    message: Not in DB
        '410':
          description: Reset password link is expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Expired:
                  value:
                    message: Reset link is expired.
      description: Check if password reset link is expired
  /password-reset:
    post:
      summary: Create password reset link
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                OK:
                  value:
                    message: OK
        '400':
          description: Invalid session UUID format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                invalid session format:
                  value:
                    message: Session uuid is invalid
        '404':
          description: 'Session not found '
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Not found:
                  value:
                    message: Not in DB
        '410':
          description: Reset password link is expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Expired:
                  value:
                    message: Reset link is expired.
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    error:
                      email:
                        - Missing data for required field.
                properties:
                  error:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
              examples:
                example-1:
                  value:
                    error:
                      email:
                        - string
      operationId: post-password-reset
      description: Create password reset link. If an email address matched to any user then sends the email.
      parameters:
        - schema:
            type: string
          in: header
          description: Session uuid
          name: X-Session-Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: 'Provide an email address to send password reset link to. '
              required:
                - email
        description: Data required to send password reset link
components:
  schemas: {}
