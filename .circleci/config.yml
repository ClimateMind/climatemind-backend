version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.2.0
  node: circleci/node@3.0.0
  python: circleci/python@1.0.0
  cypress: cypress-io/cypress@1
  codecov: codecov/codecov@3.2.3

jobs:
  lint:
    executor: python/default
    steps:
      - checkout
      - run:
          name: Install Black
          command: pip install black
      - run:
          name: Linter
          command: python3 -m black --check ./
  pytest:
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Docker Compose Build"
          command: |
            set -x
            COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1
            docker-compose --file docker/docker-compose.pytest.yml build
      - run:
          name: "Docker Compose Up"
          command: docker-compose --file docker/docker-compose.pytest.yml up -d
      - run:
          name: "Wait for database to spin up"
          command: sleep 30
      - run:
          name: "Run Pytest"
          #run pytest with flag checking no breakpoints in code
          command: docker exec -it docker-api-1 pytest --cipdb --color=yes --junitxml=junit.xml --cov-report xml --cov --cov-config .coveragerc
      - run:
          name: Copy Test Results
          command: |
            mkdir -p /tmp/test-results/unit-tests
            docker cp docker-api-1:/app/coverage.xml /tmp/test-results/unit-tests/coverage.xml
            docker cp docker-api-1:/app/junit.xml /tmp/test-results/unit-tests/results.xml
          when: always
      - codecov/upload:
          file: /tmp/test-results/unit-tests/coverage.xml
      - store_test_results:
          path: /tmp/test-results/unit-tests
  cypress:
    # Set up test environment and run cypress tests
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run:
          name: Install Node Dependencies
          command: npm i
      - run:
          name: Docker Compose Build
          command: docker-compose -f docker/docker-compose.prod.yml build
      - run:
          name: Docker Compose Up
          command: docker-compose -f docker/docker-compose.prod.yml up -d
      - run:
          name: Wait on Server
          command: npx wait-on http://localhost:5000/questions
      - run:
          name: Cypress Run
          command: npx cypress run
  build_and_deploy_prod:
    machine: true
    steps:
      - azure-acr/build-and-push-image:
          dockerfile: docker/services/api/prod/Dockerfile.prod
          login-server-name: acrwebprod001.azurecr.io
          registry-name: acrwebprod001
          repo: backend
  build_and_deploy_test:
    machine: true
    steps:
      - azure-acr/build-and-push-image:
          dockerfile: docker/services/api/prod/Dockerfile.prod
          login-server-name: acrwebtest001.azurecr.io
          registry-name: acrwebtest001
          repo: backend

workflows:
  version: 2

  test_and_deploy:
    jobs:
      - lint
      - pytest:
          requires:
            - lint
      - cypress:
          requires:
            - lint
      - build_and_deploy_prod:
          context:
            - azure
          filters:
            branches:
              only: master
          requires:
            - pytest
            - cypress
      - build_and_deploy_test:
          context:
            - azure
          filters:
            branches:
              only: develop
          requires:
            - pytest
            - cypress
