version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.2.0
  node: circleci/node@3.0.0
  python: circleci/python@1.0.0
  cypress: cypress-io/cypress@1

jobs:
  lint:
    executor: python/default
    steps:
      - checkout
      - run:
          name: Install Black
          command: pip install black
      - run:
          name: Linter
          command: python3 -m black --check ./
  pytest:
    machine: true
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: "Docker Compose Build"
          command: |
            docker-compose --file docker/docker-compose.pytest.yml build
      - run:
          name: "Docker Compose Up"
          command: docker-compose --file docker/docker-compose.pytest.yml up -d
      - run:
          name: "Wait for database to spin up"
          command: sleep 30
      - run:
          name: "Run Pytest"
          command: docker exec -it docker-web-1 pytest --cipdb
          # or to NOT check for breakpoints accidentally left in the code
          # docker-compose exec -it docker-web-1 pytest -n auto
  cypress:
    # Set up test environment and run cypress tests
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Node Dependencies
          command: npm i
      - run:
          name: Docker Compose Build
          command: docker-compose -f docker/docker-compose.prod.yml build
      - run:
          name: Docker Compose Up
          command: docker-compose -f docker/docker-compose.prod.yml up -d
      - run:
          name: Wait on Server
          command: npx wait-on http://localhost:5000/questions
      - run:
          name: Cypress Run
          command: npx cypress run
  build_and_deploy_prod:
    machine: true
    steps:
      - azure-acr/build-and-push-image:
#          context: azure
          dockerfile: docker/services/web/prod/Dockerfile.prod
          login-server-name: acrwebprod001.azurecr.io
          registry-name: acrwebprod001
          repo: backend
  build_and_deploy_test:
    machine: true
    steps:
      - azure-acr/build-and-push-image:
#          context: azure
          dockerfile: docker/services/web/prod/Dockerfile.prod
          login-server-name: acrwebtest001.azurecr.io
          registry-name: acrwebtest001
          repo: backend

workflows:
  version: 2

  build_and_test:
    jobs:
      - lint
      - pytest:
          requires:
            - lint
          context:
            - flaskenv
      - cypress:
          requires:
            - lint
          context:
            - flaskenv
      - build_and_deploy_prod:
          context:
            - azure
          filters:
            branches:
              only: master
          requires:
            - pytest
            - cypress
      - build_and_deploy_test:
          context:
            - azure
          filters:
            branches:
              only: develop
          requires:
            - pytest
            - cypress