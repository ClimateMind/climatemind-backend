version: 2.1
orbs:
  azure-acr: circleci/azure-acr@0.2.0
  node: circleci/node@3.0.0
  python: circleci/python@1.0.0
  cypress: cypress-io/cypress@1

jobs:
  lint:
    executor: python/default
    steps:
      - checkout
      - run:
          name: Install Black
          command: pip install black
      - run:
          name: Linter
          command: python3 -m black --check ./
  build:
    machine: true
    steps:
      - checkout
      # build the application image
      - run:
          name: Docker Build
          command: docker build -t $DOCKER_REGISTRY_NAME/climatemindbackend:$CIRCLE_BUILD_NUM .
  # test:
  #   machine: true
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install Docker Compose
  #         command: |
  #           curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
  #           chmod +x ~/docker-compose
  #           sudo mv ~/docker-compose /usr/local/bin/docker-compose
  #     - run:
  #         name: Docker Compose Up
  #         command: docker-compose up -d
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - .
  # - run:
  #     name: Install Dependencies
  #     command: docker-compose up -d
  # - run:
  #     name: Cypress API Tests
  #     command: npx cypress run

workflows:
  version: 2

  build_and_test:
    jobs:
      - lint

      - build:
          requires:
            - lint
      # - test:
      #     requires:
      #       - lint
      - cypress/run:
          requires:
            - lint
            # - test
          pre-steps:
            - run: "curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose && chmod +x ~/docker-compose && sudo mv ~/docker-compose /usr/local/bin/docker-compose"
            - run: "docker-compose up -d"

  build-deploy:
    jobs:
      - azure-acr/build-and-push-image:
          context: azure
          dockerfile: Dockerfile
          login-server-name: acrwebprod001.azurecr.io
          registry-name: acrwebprod001
          repo: backend
          filters:
            branches:
              only: master
      - azure-acr/build-and-push-image:
          context: azure
          dockerfile: Dockerfile
          login-server-name: acrwebtest001.azurecr.io
          registry-name: acrwebtest001
          repo: backend
          filters:
            branches:
              only: develop
